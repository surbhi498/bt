Level wise linkedlist
Send Feedback
Given a binary tree, write code to create a separate linked list for each level. You need to return the array which contains head of each level linked list.
Input format :

Elements in level order form (separated by space). If any node does not have left or right child, take -1 in its place.

Output format : Each level linked list is printed in new line (elements separated by space).

Sample Input :
5 6 10 2 3 -1 -1 -1 -1 -1 9 -1 -1
Sample Output :
5 
6 10 
2 3 
9
vector<node<int>*> createLLForEachLevel(BinaryTreeNode<int> *root) {
    // Write your code here
    queue<BinaryTreeNode<int>*> pend;
    BinaryTreeNode<int> *head = NULL;
    BinaryTreeNode<int> *tail = NULL;
    vector<BinaryTreeNode<int>> *bn;
    pend.push(root);
    pend.push(-1);
    while(!q.empty())
    {
    
    BinaryTreeNode<int> *front = pend.front();
    pend.pop();
    if(front != -1)
    {
    if(head == NULL){
    head=front;
    tail = front;
    }
    else{
    tail->next = front;
    tail = tail->next;
    }
    //bn.push_back(head);
    
    if(front->left)
    {
    
    pend.push(front->left);
    
    
    
    }
    
    if(front->right)
    {
    
    pend.push(front->right);
    
    }
   // bn.push_back(head);
    }
    else{
    bn.push_back(head);
    pend.push(-1);
    head = NULL;
    tail = NULL;
  } 
    
    }
    

}
