Code : Find a node
Send Feedback
Given a binary tree and an integer x, check if node with data x is present in the input binary tree or not. Return true or false.
Input format :
Line 1 : Elements in level order form (separated by space)
(If any node does not have left or right child, take -1 in its place)
Line 2 : Integer x
Output Format :
true or false
Sample Input :
8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1
7
Sample Output :
true

/************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) 
        {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

bool isNodePresent(BinaryTreeNode<int> *root, int x)
{
    //Write your code here
    if(root == NULL)
    {
    return false;
    }
    if(root->data == x)
    {
    return true;
    
    }
    else{
    if(root->left){
   bool bp = isNodePresent(root->left,x);
   if(bp) return bp;
   }
   if(root->right)
   {
   bool bp1 = isNodePresent(root->right,x);
    if(bp1) return bp1;
    }
    
    }
    
    //return false;
    
    
}
